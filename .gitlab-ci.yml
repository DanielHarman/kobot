stages:
  - build
  - test
  - dockerbuild
  - deploy
  
build:
  stage: build
  image: gradle:jdk14
  tags:
    - kubernetes
  script:
    - gradle --build-cache assemble
  artifacts:
    paths:
      - build/libs

test:
  stage: test
  image: gradle:jdk14
  tags:
    - kubernetes
  script: gradle check --info

dockerbuild:
  stage: dockerbuild
  tags: 
    - docker
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'
      when: always
  before_script:
    - "docker --version"
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA} --pull ."
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}"
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  after_script:
    - "docker logout ${CI_REGISTRY}"

deploy:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.3
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'
      when: always
  script:
    - kubectl get pods
  tags:
    - kubernetes
  variables:
    GIT_STRATEGY: none
  environment:
    name: production
