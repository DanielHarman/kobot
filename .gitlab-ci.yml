stages:
  - build
  - test
  - dockerbuild
  - deploy
  
test:
  stage: test
  image: gradle:jdk14
  tags:
    - docker
  script: gradle check --info

dockerbuild:
  stage: dockerbuild
  image: docker:latest
  services:
    - docker:dind
  tags:
    - docker 
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
  before_script:
    - docker --version
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA} --pull .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  after_script:
    - docker logout ${CI_REGISTRY}
    
deploy:
  stage: deploy
  tags:
    - k8s
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "master"'
  #     when: always
  variables:
    GIT_STRATEGY: none
  before_script:
    - kubectl --kubeconfig="$KUBE_CONFIG_FILE" get pods
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG_FILE" rollout restart deployment/kotbot
